package ex01_file;
/*파일클래스의 세번째 기능
 * 목적지까지 경로가 존재하는지 파악가능
 * 폴더를 만드는것이 가능하다.
 * 파일클래스는 특정문서를 만드는 기능은 없다.
 * 폴더를 만드는것 까지만 가능하다.
 * 
 *파일클래스의 역할 
 * 경로의 검증하는 역할
 * (존재하는지, 존재하지않는지, 파일인지, 폴더인지, 파일의 이름 가져오기)*/

/*입출력 스트림
 * 자바의 입출력은 java.io패키지에서 제공한다.
 * java.io패키지에서는 파일 시스템의 정보를 얻기위해 File클래스와 데이터 입출력을 위한 다양한 클래스를 제공한다.
 * 스트림의 종류를 크게 분류하면 전달 방식에 따라 (byte)기반 스트림과 문자(char)기반 스트림으로 구분한다.
 * 바이트 기반의 스트림은 데이터를 컴퓨터의 기본 단위인 byte 단위로 나눠 읽거나 쓰고
 * 문자 기반의 스트림은 텍스트 기반 문서를 다루기 위해 사용하는 스트림
 * */

/*바이트 기반 스트림
 * 컴퓨터의 모든 데이터는 바이트(byte)단위로 이루어져 있다.
 * 따라서 바이트 기반 스트림의 경우 모든 타입의 데이터를 읽고 쓰는 것이 가능하다.
 * 바이트 기반의 스트림은 바이트 입력 스트림과 바이트 출력 스트림이 있다.*/

/*InputStream
  바이트기반의 입력 스트립은 최상위 클래스로 InputStream객체가 제공된다.
  해당 객체를 상속해 다양한 입력 스트림들이 존재한다.
  각자의 개발 목적에 맞게 선택하여 사용할 수 있다.
  
 InputStream의 주요 메서드
  int read() -> 문자를 1byte씩 읽고 반환, 더 이상 읽을 문자가 없으면 -1을 반환
  int read(byte[] b) -> 매개변수로 전달된 배열에 읽어온 문자를 저장하고 실제로 읽어온 수만큼 반환 더 이상 읽을 문자가 없으면 -1을 반환
  int read(byte[] b,int offset,int len) -> 매개변수로 전달된 배열에 정해진 범위만큼 읽어서 저장. 시작위치(offset), 길이(len) 
  int availavble() -> 스트림으로부터 읽어올 수 있는 데이터의 크기를 반환
  close() -> 스트림 사용을 종료하고 자원을 반환*/
  

import java.io.File;

public class Ex03_File {
	public static void main(String[] args) {
		//aaa, bbb의 경우 실제 있는 경로가 아님
		String path = "D:\\web0900_jhs\\1.java\\작업메모/aaa/bbb";
		
		File f = new File(path);
		
		//최종 목적지가 파일이든 폴더든간에 아예 존재하지가 않음
		//exists() -> 최종 목적지가 있는지 없는지 검사함 있으면 true, 없으면 false
		if(!f.exists()) {
			System.out.println("폴더생성");
			//mkdir() -> 1개의 폴더를 만들어주는 메서드
			//mkdirs() -> 복수의 폴더를 만들어주는 메서드
			f.mkdirs();
		}
	
	
	}
}

<if - else if>
-비교해야할 조건이 여러개 있는 경우 사용하는 문법
-if문 안에 두 개 이상의 조건식과 논리연산자를 사용할 수도 있지만
더욱 코드를 간결하게 하고 가독성을 높이기 위한 방법으로 if - else if문을 구현한다.

	if(조건식1){
	  조건식1이 참일 때 실행할 문장.
	} else if(조건식2) {
  	  조건식1이 거짓이고 조건식2가 참일 때 실행할 문장.
	} else if(조건식3){
	  조건식1,2가 거짓이고 조건식3이 참일 때 실행할 문장.
	} else {
  	  위의 조건이 모두 거짓일 때 실행할 문장
	}

------------------------------------------------------------------------------------------------

<Switch>
-if문과 비슷하지만 if문은 괄호안에 인자값이 true, 혹은 false로 결정되는 조건식이 들어가야 한다.
-switch문에 조건으로 사용될 수 있는 연산자는 '==' 밖에 없다.
-즉, 두 개의 피연산자 값이 같을때만 조건으로 활용할 수 있다.
-따라서 하나의 변수 안에 저장되어 있는 값을 다수의 값과 비교해야 할때 주로 사용한다.

	switch(비교값){
	case 조건값1 :
    		비교값과 조건값1 이 일치할 때 실행할 문장.
    		break;
	case 조건값2 :
    		비교값과 조건값2 이 일치할 때 실행할 문장.
    		break;
	case 조건값3 :
    		비교값과 조건값3 이 일치할 때 실행할 문장.
    		break;
	
	default ://비교값과 일치하는 조건값이 없을 때 실행할 명령
		코드;
}

------------------------------------------------------------------------------------------------
<for 문>

-주로 반복 횟수가 정해져 있을 때 사용하는 문법
	for(초기식; 조건식; 증감식){
		반복하고싶은 명령
		명령은 여러개일 수 있다.
		산술연산을 해라, 대입해라, 출력해라, 조건을 비교해라
		(조건식에 해당할때 반복할 명령)
	}

-초기식 : 반복을 하기 위한 시작값으로 변수를 하나 초기화 한다.
-조건식 : 반복을 하기 위한 종료값으로 비교연산자를 많이 사용한다.
-증감식 : 변수의 값을 증감시켜주는 역할을 한다 증감연산자를 많이 사용한다.
 
※후행증감이나 선행증감이나 영향은 없지만 개발자들이 다들 후행증감을 사용하므로 후행증감으로 사용하도록 하자.

}

------------------------------------------------------------------------------------------------
<for문의 중첩(다중 for문)>
-for문 안에 다른 for문을 사용하는 경우를 말한다.
-for문 을 중첩하여 사용하기 때문에 코드가 어려워보일 수는 있으나, 반복문의 작동 원리와 같다.

	for(초기식;조건식;증감식){
		for(초기식;조건식;증감식){
			반복할 명령
		}
	}


------------------------------------------------------------------------------------------------
<while문>
-for문은 정해진 횟수만큼 반복하는 문법이다.
-while문은 반복 횟수가 정해져 있지 않고, 조건식이 true일 경우 계속해서 반복하는 문법이다.
-주의하지 않으면 무한루프에 빠질수 있다.

	while(조건식){
    		조건식이 참일때 반복할 명령
	}

while문은 for문처럼 시작값과 증감값을 가지고 있지 않기 때문에 값을 변화시켜주지 않으면 무한반복이 일어나게된다.

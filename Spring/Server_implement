

<빌드 도구의 역할>

 - 프로젝트 생성함에 있어 컴파일, 테스트, 설정, 배포 등 관리하는 것을 자동화하여 실행할 수 있는 애플리케이션을 만들어주는 역할을 한다.

<장점>

- 관리 기능을 자동화 하여 개발 효율성을 높인다.


<디렉토리 구조가 중요한 이유>

- 한눈에 어떤 기능이 구현되어있는지 파악 할 수 있기 때문에 파일끼리 헷갈리지 않으며 버전 충돌이 일어나지 않는다.

<기본 디렉토리 구조>

- 프로젝트명/src/main 안에 java와 resource 가 존재 하며 main의 위치에 src/test 가 있고 테스트 코드들이 존재한다.


<프로젝트 빌드의 개념과 주요 특징>

- 빌드의 목적은 실행 파일을 만드는 것이며 소스 코드, 설정, 리소스 파일들을 컴파일 하고 패키징 하여 컴퓨터에서 실행할 수 있는
  
  독립적인 형태로 변환하는 과정과 그 결과를 의미한다

- 자동화된 스크립트로 관리하기 때문에 개발 효율성을 높이고 일관된 결과를 보여준다.

<서버 애플리케이션 배포의 개념>

- 프로젝트를 배포하여 여러 사람들이 접근 할 수 있도록 하고 클라이언트들의 요청에 대한 응답을 할 수 있도록 하는 것이다.

<CI/CD 개념>

CI: 지속적인 통합

CD: 지속적인 배포

애플리케이션 개발 단계부터 배포 때 까지의 모든 단계를 자동화를 통해서 좀 더 효율적이고 빠르게 사용자에게 배포할 수 있는 것.



